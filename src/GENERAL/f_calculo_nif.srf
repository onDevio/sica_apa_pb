HA$PBExportHeader$f_calculo_nif.srf
global type f_calculo_nif from function_object
end type

forward prototypes
global function string f_calculo_nif (string nif)
end prototypes

global function string f_calculo_nif (string nif);string nif_array[7]
string primer , parcial_string, ultimo
long cifra
string control[23] = {"T","R","W","A","G","M","Y","F","P","D","X","B","N","J","Z","S","Q","V","H","L","C","K","E"}
string control_jur[9] = {"A","B","C","D","E","F","G","H","I"}


int resto , r1, r2 , parcial, i , j , r , complemento
boolean flag

// Para NIFS ficticios
if MidA(nif,1,4) = 'AUTO' THEN return 'A'

primer = LeftA(nif,1)
flag = isnumber(MidA(nif,1,8))
if flag = true then

  if ( long(MidA(nif,1,8)) <> 0 ) and (LenA(nif) = 9) then
   flag = true
  else
   flag = false
  end if
end if

if flag = true then

 // calculo del nif para persona fisica nacional

 cifra = long(LeftA(nif,8))
 resto = mod(cifra,23)
 resto = resto + 1
 return(LeftA(nif,8) + control[resto])

else

  if (( primer = "X" ) or ( primer = "M" ) ) and ( isnumber(MidA(nif,2,7))) then

    // calculo del nif para persona fisica extranjera
  
    cifra = long(MidA(nif,2,7))
    resto = mod(cifra,23)
    resto = resto + 1
    return(primer + MidA(nif,2,7) + control[resto])

 

  
  elseif ( (primer = "S") or (primer = "A") or (primer = "B") or (primer = "C") or (primer = "D") or &
         (primer = "E") or (primer = "F") or (primer = "G") or (primer = "H")  or (primer = "P") or (primer = "Q")  ) and ( isnumber(MidA(nif,2,7)) ) then

    
    // calculo del nif para per. juridicas nacionales o extranjeras o autonomos
    
    for i = 1 to 7
     j = i + 1
     nif_array[i] = MidA(nif,j,1)
    next

 
      r1 = 0
      //  los pares

      for i = 2 to 7 step 2
      
         r1 = r1 + integer(nif_array[i])

      next

      // LOS IMPARES
      r2 = 0
      parcial = 0
      for i = 1 to 7 step 2

       parcial = integer( nif_array[i] ) * 2

       if parcial >= 10 then
         parcial_string = string(parcial)    
         parcial = integer(MidA(parcial_string,1,1)) + integer(MidA(parcial_string,2,1))

       end if
   
      r2 = r2 + parcial
      next
   
      r = r1 + r2

      resto = mod(r,10)
      complemento = 10 - resto
      if complemento = 10 then
        complemento = 0

      end if
 
   ultimo = MidA(nif,9,1)
   if isnumber(ultimo) then

    // persona juridica nacional

    return( MidA(nif,1,8) + string(complemento))

   elseif (ultimo >= "A") and (ultimo <= "J") then
  
   // persona juridica extranjeros y autonomos

    if complemento = 0 then
  
      return(MidA(nif,1,8) + "J")

    else

      return(MidA(nif,1,8) + control_jur[complemento])

    end if

    else
		//ERROR PARA EXTRANJEROS O AUTONOMOS EL NOVENO CARACTER DEBE SER UNA LETRA ENTRE A y J
      return("-1")    
   end if
   
  else
	//ERROR EN EL PASO DEL NIF
   return("-1")    
  end if


end if // si primer digito numerico


end function

