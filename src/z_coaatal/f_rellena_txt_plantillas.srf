HA$PBExportHeader$f_rellena_txt_plantillas.srf
global type f_rellena_txt_plantillas from function_object
end type

forward prototypes
global function integer f_rellena_txt_plantillas (datawindow ds_datos, datetime f_ini, datetime f_fin, string carta, n_csd_impresion_formato uo_impresion)
end prototypes

global function integer f_rellena_txt_plantillas (datawindow ds_datos, datetime f_ini, datetime f_fin, string carta, n_csd_impresion_formato uo_impresion);string id_colegiado, nombre, domicilio, poblacion, numero, id_col_ant, cliente, n_visado, tipo_act, emplazam, emp_pobla, datos_obra
string Newline="~n", Tab="~t", retcar="~r", linea, NombreFichero, directorio, nombre_pdf,ruta_base
long i, j
integer fichero, insertados=0
n_cst_filesrvwin32 cambia_directorio
n_csd_plantillas uo_plantillas
datastore ds_datos_obra

cambia_directorio = create n_cst_filesrvwin32
directorio = cambia_directorio.of_getcurrentdirectory()
NombreFichero = g_directorio_rtf+'cartas_control.txt'
ruta_base = uo_impresion.ruta_base + uo_impresion.ruta_relativa

// Creamos el objeto de plantillas y rellenamos sus parametros
uo_plantillas=create n_csd_plantillas
uo_plantillas.mdb='cartas_control.txt'
uo_plantillas.ruta_mdb=nombrefichero
uo_plantillas.ruta = ruta_base

choose case carta
	case '1'
		nombre_pdf='CARTSSR'
	case '21'
		nombre_pdf='CARSS04'
		ds_datos.setfilter("carta = '1'")
	case '22'
		nombre_pdf='CARSS05'
		ds_datos.setfilter("carta = '2'")
	case '31'
		nombre_pdf='CARSS01'
		ds_datos.setfilter("carta = '1'")
	case '32'	
		nombre_pdf='CARSS02'
		ds_datos.setfilter("carta = '2'")
	case '33'	
		nombre_pdf='CARSS03'
		ds_datos.setfilter("carta = '3'")
end choose

uo_plantillas.ruta_plantilla = g_directorio_rtf+nombre_pdf+".doc"
if uo_impresion.pdf='S' then uo_plantillas.pdf = true
if uo_impresion.papel='S' then uo_plantillas.papel=true //uo_plantillas.pdf = false
if uo_impresion.email='S' then uo_plantillas.email=true
uo_plantillas.nombre_pdf=uo_impresion.nombre

ds_datos.filter()
//fichero = FileOpen(NombreFichero,LineMode!,Write!,LockWrite!,Replace!)

if fichero = -1 then 
	cambia_directorio.of_changedirectory(directorio)
	destroy cambia_directorio
	Messagebox(g_titulo,'Ha habido un error accediendo al fichero.',StopSign!)
	return 0
end if

if not(uo_plantillas.pdf) then
	fichero = FileOpen(NombreFichero,LineMode!,Write!,LockWrite!,Replace!)
	FileWrite(fichero, "nombre"+Tab+"domicilio"+Tab+"poblacion"+Tab+"cliente"+Tab+"numero"+Tab+"t_act"+Tab+"emplazamiento"+Tab+"emp_pobla"+Tab+"obra")
end if


For i = 1 to ds_datos.RowCount()
	id_colegiado = ds_datos.GetItemString(i, 'id_colegiado')			
	n_visado = ds_datos.GetItemString(i, 'n_visado')	
	uo_impresion.ist_doc_modulo.id_modulo=id_colegiado
	uo_impresion.ist_doc_modulo.anyo=string(year(today()))
	uo_impresion.nombre = n_visado
	uo_impresion.id_receptor=id_colegiado
	nombre = f_colegiado_nombre_apellido(id_colegiado)
	domicilio = f_domicilio_activo(id_colegiado)
	poblacion = f_poblacion_activa(id_colegiado)
	numero = f_colegiado_n_col(id_colegiado)
	cliente = ds_datos.GetItemString(i, 'cliente')
	if isnull(n_visado) then n_visado = space(10)
	tipo_act = f_dame_desc_tipo_actuacion(ds_datos.GetItemString(i, 'fase'))
	if lower(ds_datos.describe("emplazam.name")) = 'emplazam' then emplazam = ds_datos.GetItemString(i, 'emplazam')
	if lower(ds_datos.describe("emp_pobla.name")) = 'emp_pobla' then emp_pobla = ds_datos.GetItemString(i, 'emp_pobla')
	
	uo_plantillas.nombre_pdf=n_visado+'_'+nombre_pdf
	
	if uo_plantillas.pdf then
		fichero = FileOpen(NombreFichero,LineMode!,Write!,LockWrite!,Replace!)
		// Insertamos la primera fila con los nombres de los campos de combinaci$$HEX1$$f300$$ENDHEX$$n
		FileWrite(fichero, "nombre"+Tab+"domicilio"+Tab+"poblacion"+Tab+"cliente"+Tab+"numero"+Tab+"t_act"+Tab+"emplazamiento"+Tab+"emp_pobla"+Tab+"obra")

		uo_plantillas.ruta=ruta_base + id_colegiado+'\'	
		if not directoryExists(uo_plantillas.ruta) then
			CreateDirectory(uo_plantillas.ruta)
		end if
	end if	
	CHOOSE CASE LeftA(carta,1)
		CASE '1'
			ds_datos_obra = create datastore
			ds_datos_obra.dataobject = "ds_obras_carta_src"
			ds_datos_obra.settransobject(sqlca)							
							
			if id_colegiado <> id_col_ant  then
				ds_datos_obra.retrieve(id_colegiado, f_ini, f_fin)				

				for j=1 to ds_datos_obra.rowcount()
					datos_obra += ds_datos_obra.GetItemString(j, 'datos_obra')
					if j<> ds_datos_obra.rowcount() then datos_obra += retcar + retcar
				next

				linea = nombre + Tab + domicilio + Tab + poblacion + Tab + "" + Tab + numero + Tab + "" + Tab + "" + Tab + "" + Tab + datos_obra
				FileWrite(fichero,linea)
				insertados = 1
				id_col_ant = id_colegiado
			else
				id_col_ant = id_colegiado
				continue
			end if
		

		
		CASE '2','3'
			linea = nombre + Tab + domicilio + Tab + poblacion + Tab + cliente + Tab + n_visado + Tab + tipo_act + Tab + emplazam + Tab + emp_pobla + Tab + ""
			FileWrite(fichero,linea)
			insertados = 1
		
	END CHOOSE
	datos_obra = ''	

	if uo_plantillas.pdf then
		FileClose(fichero)	
		uo_plantillas.f_combinar_plantilla_txt()	
		uo_impresion.f_generar_entrada_doc_modulo()
		if uo_impresion.generar_registro='S' then uo_impresion.f_generar_registro_salida()
	end if
next

if not(uo_plantillas.pdf) then
	FileClose(fichero)	
	uo_plantillas.f_combinar_plantilla_txt()		
end if

destroy ds_datos_obra

// Cambiamos al directorio raiz de la aplicacion, como corresponde estar para que todas las imagenes sigan funcionando
cambia_directorio.of_changedirectory(directorio)
destroy cambia_directorio

// Devuelve 1 si hay datos para combinar
return insertados
end function

