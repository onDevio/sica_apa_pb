HA$PBExportHeader$f_generar_ini_desde_fdf.srf
global type f_generar_ini_desde_fdf from function_object
end type

forward prototypes
global function integer f_generar_ini_desde_fdf (string archivo_fdf)
global function string f_generar_ini_desde_fdf (string archivo_fdf, integer contrato, string documento, ref string ruta_archivo_zip, string email)
end prototypes

global function integer f_generar_ini_desde_fdf (string archivo_fdf);//Esta funcion crea un archivo ini  a partir de un fdf que se le pasa como string resultado de haber aplicado la funcion
//f_obtener_linea_fdf sobre el archivo fdf en s$$HEX1$$ed00$$ENDHEX$$
string cadena_fdf

cadena_fdf = f_obtener_linea_fdf(archivo_fdf)


return 1
end function

global function string f_generar_ini_desde_fdf (string archivo_fdf, integer contrato, string documento, ref string ruta_archivo_zip, string email);//Esta funcion crea un archivo ini  a partir de un fdf que se le pasa como string resultado de haber aplicado la funcion
//f_obtener_linea_fdf sobre el archivo fdf en s$$HEX1$$ed00$$ENDHEX$$

string cadena_fdt , cadena_trabajo, ls_aux, cadena_romano, num_arquitecto,  patron_cliente
integer file, num_colegiados, i,num_cliente, num_representantes,j
string result
string ruta_resultado_ini
string numero_colegiado
string colegiados [1 to 10, 1 to 5]
string observaciones
string Direccion, Direccion_Rep
string s_autores, ls_comprobante
string s_nombre_completo_autor, s_titulacion_autor
string s_apellidos_v, s_apellidos_autor_fdf, s_nombre_v, s_nombre_autor_fdf
integer posicion
boolean existe 
integer n_c, n_a
st_poblacion_datos st
	integer num_col_aux
	string nombre_completo_v, nombre_completo_fdf
integer numero_colegiados, numero_arquitectos, numero_autores
string autor1, autor2, autor3
string autor1_t, autor2_t, autor3_t
string domicilio, localidad
int n_asoc
string vec_autores[]
string vec_colegiados[]
string vec_colegiados_2[]
int cont_v_colegiados
string num_soc_aux
double participacion_sociedad
double participacion_1, participacion_2, participacion_3, participacion_total_sociedad 
double participacion_aux
string ls_aux_1,nombre
int cont,k
integer sociedad
string nombre_aux, apellido_aux


cadena_fdt = f_obtener_linea_fdf(archivo_fdf)
choose case contrato
	case 1 
		cadena_trabajo = 'Trab1_'
		cadena_romano = ""
	case 2
		cadena_trabajo = 'Trab2_'
		cadena_romano = "I"
	case 3
		cadena_trabajo = 'Trab3_'
		cadena_romano= "II"
end choose
//a partir de aqui iremos contruyendo el archivo.ini
//creamos el fichero
documento = replace(documento,pos(documento,"."),1,"")
ruta_resultado_ini = Profilestring(g_dir_aplicacion + "SICA.INI","Aplicacion","path","") + "\"
result = ruta_resultado_ini+documento+"_"+string(contrato)+".ini"
ruta_archivo_zip =  ruta_resultado_ini+documento+"_"+string(contrato)
file = FileOpen(result, LineMode!, Write!,LockReadWrite!, Replace!, EncodingUTF8!)
fileclose(file)	

integer prueba

 setprofilestring(result,"VERSION","version","V Nafarroa")
 setprofilestring(result,"DESCRIPTORES","email",email)
 setprofilestring(result,"DESCRIPTORES","id_referencia","")
 setprofilestring(result,"COLEGIO","colegio","31")
 setprofilestring(result,"COLEGIO","delegaci$$HEX1$$f300$$ENDHEX$$n","01")
 setprofilestring(result,"CONTRATO","n_registro","")
 setprofilestring(result,"CONTRATO","n_expedi","")
 
 //													DESCRIPTORES 
 /*********************************************************************************************/


//													CONTRATO 
 /*********************************************************************************************/
 ls_aux = f_buscar_patron_en_fdf(cadena_fdt ,'Arq1_NumColI')
 numero_colegiado = ls_aux
	if len(numero_colegiado) < 5 then
		choose case len(numero_colegiado)
			case 1
				numero_colegiado = "0000"+ numero_colegiado
			case 2
				numero_colegiado = "000"+ numero_colegiado
			case 3
				numero_colegiado = "00"+ numero_colegiado
			case 4
				numero_colegiado = "0"+ numero_colegiado
		end choose
	end if

 setprofilestring(result,"CONTRATO","colegiado",numero_colegiado)
 ruta_archivo_zip = ruta_archivo_zip +"_"+ numero_colegiado
 ls_aux=''
 setprofilestring(result,"CONTRATO","f_entrada",f_buscar_patron_en_fdf(cadena_fdt ,'DiaI')+"-"+f_buscar_patron_en_fdf(cadena_fdt ,'MesI')+"-"+f_buscar_patron_en_fdf(cadena_fdt ,'AnioI'))
 ruta_archivo_zip = ruta_archivo_zip +"_"+ f_buscar_patron_en_fdf(cadena_fdt ,'DiaI')+"_"+f_buscar_patron_en_fdf(cadena_fdt ,'MesI')+"_"+f_buscar_patron_en_fdf(cadena_fdt ,'AnioI')+".zip"
 setprofilestring(result,"CONTRATO","f_visado","")
 setprofilestring(result,"CONTRATO","f_abono","")
 setprofilestring(result,"CONTRATO","f_final_obra","")
 setprofilestring(result,"CONTRATO","f_cerrado","")
//tomamos el titulo
ls_aux = f_buscar_patron_en_fdf(cadena_fdt ,cadena_trabajo+'DesObra')
 setprofilestring(result,"CONTRATO","titulo",ls_aux)
ls_aux=''
//tipo actuacion
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,cadena_trabajo+'TIntervencion')
 setprofilestring(result,"CONTRATO","tipo_actuacion",ls_aux)
ls_aux=''
//tipo_obra
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,cadena_trabajo+'TObra')
if f_es_vacio(ls_aux) then ls_aux='00'
setprofilestring(result,"CONTRATO","tipo_obra",ls_aux)
ls_aux=''
//destino
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,cadena_trabajo+'Destino')
setprofilestring(result,"CONTRATO","destino",ls_aux)
ls_aux=''
//tipo_via_emplazamiento
ls_aux="CL"
setprofilestring(result,"CONTRATO","tipo_via_emplazamiento",ls_aux)
//emplazamiento
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Emp_CalleI')
setprofilestring(result,"CONTRATO","emplazamiento",ls_aux)
ls_aux=''
//n_calle
setprofilestring(result,"CONTRATO","n_calle",ls_aux)
//hacemos una llamada a la funcion f_poblacion datos para rellenar st
st = f_poblacion_datos(f_buscar_patron_en_fdf(cadena_fdt,'Emp_CodPostal'), f_buscar_patron_en_fdf(cadena_fdt,'Emp_Municipio'))	
//cod_pos, poblacion, provincia, id_pob
setprofilestring(result,"CONTRATO","cod_pos",st.cod_pos)	

setprofilestring(result,"CONTRATO","desc_poblacion",st.desc_poblacion)

setprofilestring(result,"CONTRATO","provincia",st.desc_provincia)

setprofilestring(result,"CONTRATO","poblacion",st.cod_pob)	
//administracion
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'POficial')
setprofilestring(result,"CONTRATO","administracion",ls_aux)
//gestion_de_cobro
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Cobro')
if mid(ls_aux,1,1) = 'S' then
	ls_aux='C'
else
	ls_aux='P'
end if
setprofilestring(result,"CONTRATO","gestion_de_cobro",ls_aux)
//pem
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,cadena_trabajo+'PEM')
setprofilestring(result,"CONTRATO","pem",ls_aux)
ls_aux=''
//sup_viv
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Superficie_Viviendas')
setprofilestring(result,"CONTRATO","sup_viv",ls_aux)
ls_aux=''
//sup_garaje
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Superficie_Garajes')
setprofilestring(result,"CONTRATO","sup_garaje",ls_aux)
ls_aux=''
//sup_otros
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Superficie_Otros')
setprofilestring(result,"CONTRATO","sup_otros",ls_aux)
ls_aux=''
//volumen
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,cadena_trabajo+'Volumen')
setprofilestring(result,"CONTRATO","volumen",ls_aux)
ls_aux=''
//altura
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'SobreR_Altura')
setprofilestring(result,"CONTRATO","altura",ls_aux)
ls_aux=''
//num_viv
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'NumViviendas')
setprofilestring(result,"CONTRATO","num_viv",ls_aux)
ls_aux=''
//num_edif
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'NumEdificios')
setprofilestring(result,"CONTRATO","num_edif",ls_aux)
ls_aux=''
//nivel control calidad
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Nivel')
setprofilestring(result,"CONTRATO","nivel control calidad",mid(ls_aux,1,1))
ls_aux=''
//estudio geotecnico
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Estudio')
setprofilestring(result,"CONTRATO","estudio geotecnico",mid(ls_aux,1,1))
ls_aux=''
//control calidad externo
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Control_Calidad_S')
setprofilestring(result,"CONTRATO","control calidad externo",ls_aux)
//control calidad interno

setprofilestring(result,"CONTRATO","control calidad interno",ls_aux)
 //numplantas
ls_aux = f_buscar_patron_en_fdf(cadena_fdt ,'BajoR_NumPlantas')
 setprofilestring(result,"CONTRATO","plantas_baj",ls_aux)
ls_aux=''
 //superficie
ls_aux = f_buscar_patron_en_fdf(cadena_fdt ,'BajoR_Superficie')
 setprofilestring(result,"CONTRATO","sup_baj",ls_aux)
ls_aux=''
//plantas_sob
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'SobreR_NumPlantas')
setprofilestring(result,"CONTRATO","plantas_sob",ls_aux)
ls_aux=''
//sup_sob
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'SobreR_Superficie')
setprofilestring(result,"CONTRATO","sup_sob",ls_aux)
ls_aux = ""
//sup_sob
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Superficie_Total')
setprofilestring(result,"CONTRATO","total_sup",ls_aux)
ls_aux = ""
//sup_sob
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ClasePromotor')
setprofilestring(result,"CONTRATO","clase_promotor",ls_aux)
ls_aux = ""
//uso
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Uso')
choose case ls_aux
	case 'VENTA'
		ls_aux= 'V'
	case 'ALQUILER'
		ls_aux= 'A'
	case 'AUTOUSO'
		ls_aux= 'U'
end choose
setprofilestring(result,"CONTRATO","uso",ls_aux)
ls_aux = ""
//sup_sob
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_Honorarios')
setprofilestring(result,"CONTRATO","honorarios",ls_aux)
ls_aux = ""
//coeficiente
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_Coeficiente')
observaciones = observaciones + " coefic. : " + ls_aux +", "
ls_aux = ""
//GDesplazamiento
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_GDesplazamiento')
observaciones = observaciones + " gast. desplaz. : " + ls_aux+", "
ls_aux = ""
//GTramitacion
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_GTramitacionI')
//observaciones = observaciones + " gast. tramit. : " + ls_aux+", "
ls_aux = ""
// Tramitacion por cliente o colegiado
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Gtramitacion1')
if ls_aux='1' then
	observaciones = observaciones + " Gast tramit. a cargo del Cliente."
elseif ls_aux='2' then
	observaciones = observaciones + " Gast tramit. a cargo del Colegiado."
end if
ls_aux = ""
//ProvFondos
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ProvFondos')
observaciones = observaciones + " prov. fondos. : " + ls_aux+", "
ls_aux = ""
//ProvFondos
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_Superficie')
// No lo quieren: observaciones = observaciones + " superficie en trabajo : " + ls_aux+", "
ls_aux = ""
//total
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_TOTALI')
//observaciones = observaciones + " total sin iva : " + ls_aux+", "
ls_aux = ""

participacion_1 = double(f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol1'))
participacion_2 = double(f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol2'))
participacion_3 = double(f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol3'))
if f_buscar_patron_en_fdf(cadena_fdt,'Arq1_NumSoc') <> '' then
	participacion_total_sociedad = double(f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol1'))+participacion_total_sociedad
end if
if f_buscar_patron_en_fdf(cadena_fdt,'Arq2_NumSoc') <> '' then
	participacion_total_sociedad = double(f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol2'))+participacion_total_sociedad
end if
if f_buscar_patron_en_fdf(cadena_fdt,'Arq3_NumSoc') <> '' then
	participacion_total_sociedad = double(f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol3'))+participacion_total_sociedad
end if

//													COLEGIADOS O ARQUITECTOS
/*************************************************************************************************/
boolean todoOk
string num_soc3,num_soc2,num_soc1
string num_sociedad
integer n_s
n_s = 1
//Vamos a diferenciar entre casos con sociedades y sin sociedades

//num_sociedad = f_buscar_patron_en_fdf(cadena_fdt,'Soc_Numero')
// ESTUDIAR SI HAY SOCIEDAD Y CUANTAS
//------------------------------------------------------
num_soc3=f_buscar_patron_en_fdf(cadena_fdt,'Arq3_NumSoc')
num_soc2=f_buscar_patron_en_fdf(cadena_fdt,'Arq2_NumSoc')
num_soc1=f_buscar_patron_en_fdf(cadena_fdt,'Arq1_NumSoc')
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'NumArquitectos')
num_colegiados = integer(ls_aux)
ls_aux = ''
if num_colegiados > 3 then 
			num_colegiados=Truncate(num_colegiados, 0)
//			messagebox(g_titulo,'Vigile en el ini, antes de importar, el n$$HEX1$$fa00$$ENDHEX$$mero de autores', exclamation!)
end if
if not f_es_vacio(num_soc3) then
	num_sociedad='3'
	if  (num_soc3 = num_soc2) and  (num_soc3 = num_soc1) and (num_soc1= num_soc2) then
		 todoOk=true
	else 
		todoOk=false
	end if
elseif not f_es_vacio(num_soc2) then
		num_sociedad='2'
		if  num_soc2 = num_soc1 then
		 todoOk=true
	else 
		todoOk=false
	end if
elseif not f_es_vacio(num_soc1) then
		num_sociedad='1'	
		 todoOk=true
	else
		num_sociedad=""	
end if

if num_sociedad <> "" then
	if not todoOk then
		observaciones = observaciones +"ATENCI$$HEX1$$d300$$ENDHEX$$N: Distintas sociedades"
	end if
end if 

string relacion[6,4]
//autor(apellidos-nombre)
//colegiado(apellidos-nombre)
//orden
//colegiado orden inverso (nombre-apellidos)

cont = 1
do while cont <>  -1	
	
	if f_buscar_patron_en_fdf(cadena_fdt,'Autor'+string(cont)) = "" then
		cont = -1
	else
		//javi 11/8/2008
		//Introducimos la limpieza de '/', ya que en los autores de sociedades nis encontraremos la barra
		vec_autores[cont]=f_buscar_patron_en_fdf(cadena_fdt,'Autor'+string(cont)+'I')
		if pos(vec_autores[cont],'/') > 0 then
			vec_autores[cont] = left(vec_autores[cont],pos(vec_autores[cont],'/') - 1)
		end if
		vec_autores[cont] = f_sustituir_cadena(vec_autores[cont],",","","TODAS")
		vec_autores[cont] = f_sustituir_cadena(vec_autores[cont]," ","","TODAS")
		cont = cont + 1
	end if
	
loop
cont = 1
do while cont <> -1	
	
	if   f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(cont)+"_Nombre")= "" then
		cont = -1
	else
		vec_colegiados[cont]=   f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(cont)+"_Apellidos") + f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(cont)+"_Nombre") 
		vec_colegiados_2[cont]=   f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(cont)+"_Nombre") + f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(cont)+"_Apellidos") 
		vec_colegiados_2[cont] = f_sustituir_cadena(vec_colegiados_2[cont],",","","TODAS")
		vec_colegiados_2[cont] = f_sustituir_cadena(vec_colegiados_2[cont]," ","","TODAS")
		vec_colegiados[cont] = f_sustituir_cadena(vec_colegiados[cont],",","","TODAS")
		vec_colegiados[cont] = f_sustituir_cadena(vec_colegiados[cont]," ","","TODAS")
		cont = cont + 1
	end if
loop


	//comprobamos si el autor es igual a algun colegiado
	for j = 1 to UpperBound(vec_autores)
		relacion[j,1] = string(vec_autores[j])
		for k = 1 to UpperBound(vec_colegiados)
			if trim(vec_autores[j]) = trim(vec_colegiados[k]) or trim(vec_autores[j]) = trim(vec_colegiados_2[k]) then	
				relacion[j,2] = string(vec_colegiados[k])
				relacion[j,3] = string(k)
				relacion[j,4] = string(vec_colegiados_2[k])
			elseif trim(vec_autores[j]) <> trim(vec_colegiados[k]) and trim(vec_autores[j]) = trim(vec_colegiados_2[k]) then
				relacion[j,2] = ""
				relacion[j,3] = string(k)
			end if
			
		next
	next
	boolean encontrado = false
	integer aux_cont
	for i = 1 to UpperBound(vec_colegiados)
		for k = 1 to UpperBound(vec_autores)
			for aux_cont = 1 to UpperBound(relacion)
				if (trim(vec_colegiados[i]) = trim(relacion[aux_cont,1]) or trim(vec_colegiados[i]) = trim(relacion[aux_cont,2])) or (trim(vec_colegiados_2[i]) = trim(relacion[aux_cont,1]) or trim(vec_colegiados_2[i]) = trim(relacion[aux_cont,2]))then
					encontrado = true
				end if
			next
			if (trim(vec_autores[k]) <> trim(vec_colegiados[i]) or trim(vec_autores[k]) <> trim(vec_colegiados_2[i])) and encontrado = false then
				relacion[j,1] = ""
				relacion[j,2] = string(vec_colegiados[i])
				relacion[j,3] = string(i)
				relacion[j,4] = string(vec_colegiados_2[i])
				j = j+1
				k= 10
			end if
			encontrado = false
		next
	next
	n_c = 1
	n_a = 1
	//Javi Medina 12/8/08
//	if num_sociedad = '' then
//	else
//		n_s = 1
//	end if
	for i= 1 to UpperBound(relacion)
		//Javi Medina 11/8/2008
		//se a$$HEX1$$f100$$ENDHEX$$ade a esta comprobacion el numero de sociedad
		if (relacion[i,1] <> "" and relacion[i,2] <> "") or (n_s <=1 and num_sociedad <> '') THEN
			string autor_aux
			string titulacion 
			autor_aux=f_buscar_patron_en_fdf(cadena_fdt,'Autor'+string(i))
			autor_aux = f_sustituir_cadena(autor_aux,",","","TODAS")
			autor_aux = f_sustituir_cadena(autor_aux," ","","TODAS")
			int w
			for w = 1 to UpperBound(relacion)
				if relacion[w,1] = autor_aux or relacion[w,4] = autor_aux then
					titulacion = f_buscar_patron_en_fdf(cadena_fdt,'Autor'+string(i)+"_Titulacion")
				end if
			next
			//Como vamos a suponer que dentro de un mismo fdf todos los colegiados perteneceran a la misma sociedad, en el cado de estar asociados
			//restringiremos a 1 el numero de sociedades
			
			//Javi Medina 11/8/2008
			if num_sociedad <> "" and n_s <= 1 then
						participacion_sociedad = 100
						//Cuando estamos en el caso de una sociedad insertamos un solo colegiado que ser$$HEX2$$e1002000$$ENDHEX$$la propia sociedad
						//numero de socio
						setprofilestring(result,"COLEGIADOS","numero_"+string(n_s),"S"+num_soc1)
						//porcentaje
						setprofilestring(result,"COLEGIADOS","porcentaje_"+string(n_s),"100")
						//autor
						setprofilestring(result,"COLEGIADOS","autor_"+string(n_s),"N")
						//director
						setprofilestring(result,"COLEGIADOS","director_"+string(n_s),"N")
						ls_aux=''
						//nombre
						ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq1_SocProfesional')
						setprofilestring(result,"COLEGIADOS","nombre_"+string(n_s),ls_aux +" "+ls_aux_1)
						ls_aux=''
						//nif
						ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq1_Nif')
						setprofilestring(result,"COLEGIADOS","nif_"+string(n_s),ls_aux)
						ls_aux=''
						//miembro_sociedad
						setprofilestring(result,"COLEGIADOS","miembro_sociedad"+string(n_s),"N")
						//csfp
						setprofilestring(result,"COLEGIADOS","csfp_"+string(n_s),"N")
						//director_em
						setprofilestring(result,"COLEGIADOS","director_em_"+string(n_s),'N')
						//autor_ess
						setprofilestring(result,"COLEGIADOS","autor_ess_"+string(n_s),'N')
						//autor_eb
						setprofilestring(result,"COLEGIADOS","autor_eb_"+string(n_s),'N')
						//atcssdo
						setprofilestring(result,"COLEGIADOS","atcssdo_"+string(n_s),'N')
						//domicilio
						setprofilestring(result,"COLEGIADOS","domicilio_"+string(n_s),"Por determinar")
						//localidad
						setprofilestring(result,"COLEGIADOS","localidad_"+string(n_s),"Iru$$HEX1$$f100$$ENDHEX$$a")
						//provincia
						setprofilestring(result,"COLEGIADOS","provincia_"+string(n_s),"00031")
						//colegio_oficial
						setprofilestring(result,"COLEGIADOS","colegio_oficial_"+string(n_s),"31")
						//bonus_malus
						setprofilestring(result,"COLEGIADOS","bonus_malus_"+string(n_s),"1")
						//cp
						setprofilestring(result,"COLEGIADOS","cp_"+string(n_s),"31669")
						ls_aux=''
						//total
						//setprofilestring(result,"COLEGIADOS","total","1")	
						//n_c = 2
						n_s = n_s + 1
				end if
			
			if num_sociedad <> "" then
				j =  integer (relacion[i,3])
				//aqui vamos a tratar si el sujeto es socio --> asociados o no lo es -- > colegiado
				
				choose case j
					case 1
						num_soc_aux = num_soc1
					case 2
						num_soc_aux = num_soc2
					case 3
						num_soc_aux = num_soc3
				end choose
				numero_colegiado = f_buscar_patron_en_fdf(cadena_fdt,"Arq"+string(j)+'_NumColI')
				
				if len(numero_colegiado) < 5 then
				choose case len(numero_colegiado)
					case 1
						numero_colegiado = "0000"+ numero_colegiado
					case 2
						numero_colegiado = "000"+ numero_colegiado
					case 3
						numero_colegiado = "00"+ numero_colegiado
					case 4
						numero_colegiado = "0"+ numero_colegiado
				end choose
				end if
				choose case j
						case 1
							participacion_aux = participacion_1
						case 2
							participacion_aux = participacion_2
						case 3
							participacion_aux = participacion_3
				end choose
				if num_soc_aux <>'' then
						setprofilestring(result,"ASOCIADOS","numero_"+string(n_c),numero_colegiado)
						ls_aux=''
						//porcentaje
						ls_aux=f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol'+string(j))
						setprofilestring(result,"ASOCIADOS","porcentaje_"+string(n_c),string(participacion_aux*100/participacion_total_sociedad))
						ls_aux=''
						//autor
						setprofilestring(result,"ASOCIADOS","autor_"+string(n_c),"S")
						//director
						setprofilestring(result,"ASOCIADOS","director_"+string(n_c),"N")
						//nombre
						ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(n_c)+'_Nombre')
						ls_aux_1 = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(n_c)+'_Apellidos')
						setprofilestring(result,"ASOCIADOS","nombre_"+string(n_c),ls_aux +" "+ls_aux_1)
						ls_aux=''
						//nif
						ls_aux = f_buscar_patron_en_fdf(cadena_fdt,num_arquitecto+'_DNI')
						setprofilestring(result,"ASOCIADOS","nif_"+string(n_c),ls_aux)
						ls_aux=''
						//sociedad
						ls_aux = f_buscar_patron_en_fdf(cadena_fdt,num_arquitecto+'_Sociedad')
						setprofilestring(result,"ASOCIADOS","nif_"+string(n_c),"s"+ls_aux)
						ls_aux=''
						//sociendad
						setprofilestring(result,"ASOCIADOS","sociedad_"+string(n_c),"S"+num_soc1)
						//csfp
						setprofilestring(result,"ASOCIADOS","csfp_"+string(n_c),"N")
						//director_em
						setprofilestring(result,"ASOCIADOS","director_em_"+string(n_c),"N")
						//autor_ess
						setprofilestring(result,"ASOCIADOS","autor_ess_"+string(n_c),"N")
						//autor_eb
						setprofilestring(result,"ASOCIADOS","autor_eb_"+string(n_c),"N")
						//atcssdo
						setprofilestring(result,"ASOCIADOS","atcssdo_"+string(n_c),"N")
						select domicilio_activo, poblacion_activa into :domicilio,:localidad  from colegiados where n_colegiado = :numero_colegiado using sqlca;
						//domicilio
						ls_aux = domicilio
						setprofilestring(result,"ASOCIADOS","domicilio_"+string(n_c),ls_aux)
						ls_aux=''
						//localidad
						ls_aux = localidad
						setprofilestring(result,"ASOCIADOS","localidad_"+string(n_c),ls_aux)
						ls_aux=''
						//provincia
						setprofilestring(result,"ASOCIADOS","provincia_"+string(n_c),"")
						//colegio_oficial
						setprofilestring(result,"ASOCIADOS","colegio_oficial_"+string(n_c),"31")
						//alta_mussaat
						ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"CProfesion_Col"+string(i))
						if ls_aux = "MUSAAT" then
							ls_aux = "S"
						else
							//observaciones = observaciones + "  " +"Seguro_Col"+string(n_c) +" : " +ls_aux+", "
							ls_aux = "N"
						end if
						setprofilestring(result,"ASOCIADOS","alta_musaat_"+string(n_c),ls_aux)
						ls_aux=''
						//cobertura
						setprofilestring(result,"ASOCIADOS","cobertura_"+string(n_c),"")
						//bonus_malus
						setprofilestring(result,"ASOCIADOS","bonus_malus_"+string(n_c),"1")
						//cp
						setprofilestring(result,"ASOCIADOS","cp_"+string(n_c),"")
						n_c = n_c +1
						//javi medina 12/8/08
					elseif relacion[i,1] = relacion[i,2] then
					setprofilestring(result,"COLEGIADOS","numero_"+string(n_s),numero_colegiado)
					ls_aux=''
					//porcentaje
					ls_aux=f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol'+string(j))
					setprofilestring(result,"COLEGIADOS","porcentaje_"+string(n_s),ls_aux)
					participacion_sociedad = participacion_sociedad - double(ls_aux)
					setprofilestring(result,"COLEGIADOS","porcentaje_1",string(participacion_sociedad))
					ls_aux=''
					//autor
					setprofilestring(result,"COLEGIADOS","autor_"+string(n_s),"S")
					//director
					setprofilestring(result,"COLEGIADOS","director_"+string(n_s),ls_aux)
					//nombre
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_Nombre')
					ls_aux_1 = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_Apellidos')
					setprofilestring(result,"COLEGIADOS","nombre_"+string(n_s),ls_aux_1 + ", "+ ls_aux)
					//nif
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_DNI')
					setprofilestring(result,"COLEGIADOS","nif_"+string(n_s),ls_aux)
					ls_aux=''
					//miembro_sociedad
					setprofilestring(result,"COLEGIADOS","miembro_sociedad_"+string(n_s),"")
					//csfp
					setprofilestring(result,"COLEGIADOS","csfp_"+string(n_s),"")
					//director_em
					setprofilestring(result,"COLEGIADOS","director_em_"+string(n_s),"S")
					//autor_ess
					setprofilestring(result,"COLEGIADOS","autor_ess_"+string(n_s),"N")
					//autor_eb
					setprofilestring(result,"COLEGIADOS","autor_eb_"+string(n_s),"N")
					//atcssdo
					setprofilestring(result,"COLEGIADOS","atcssdo_"+string(n_s),"N")
					select domicilio_activo, poblacion_activa into :domicilio,:localidad  from colegiados where n_colegiado = :numero_colegiado using sqlca;
					//domicilio
					setprofilestring(result,"COLEGIADOS","domicilio_"+string(n_s),domicilio)
					//localidad
					setprofilestring(result,"COLEGIADOS","localidad_"+string(n_s),localidad)
					//provincia
					setprofilestring(result,"COLEGIADOS","provincia_"+string(n_s),"")
					//colegio_oficial
					setprofilestring(result,"COLEGIADOS","colegio_oficial_"+string(n_s),"31")
					//alta_mussaat
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"CProfesion_Col"+string(n_s))
					if ls_aux = "MUSAAT" then
						ls_aux = "S"
					else
						//observaciones = observaciones + "  " +"Seguro_Col"+string(n_s) +" : " +ls_aux+", "
						ls_aux = "N"
					end if
					setprofilestring(result,"COLEGIADOS","alta_musaat_"+string(n_s),ls_aux)
					ls_aux=''
					//cobertura
					setprofilestring(result,"COLEGIADOS","cobertura_"+string(n_s),"")
					//bonus_malus
					setprofilestring(result,"COLEGIADOS","bonus_malus_"+string(n_s),"1")
					//cp
					setprofilestring(result,"COLEGIADOS","cp_"+string(n_s),"")
					n_s = n_s +1
					
				end if
			elseif titulacion <> "A" then
				//numero
				j = integer ( relacion[i,3] )
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"Arq"+string(j)+'_NumColI')
				numero_colegiado = ls_aux
				if len(numero_colegiado) < 5 then
					choose case len(numero_colegiado)
						case 1
							numero_colegiado = "0000"+ numero_colegiado
						case 2
							numero_colegiado = "000"+ numero_colegiado
						case 3
							numero_colegiado = "00"+ numero_colegiado
						case 4
							numero_colegiado = "0"+ numero_colegiado
					end choose
				end if
				setprofilestring(result,"COLEGIADOS","numero_"+string(n_c),numero_colegiado)
				ls_aux=''
				//porcentaje
				ls_aux=f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol'+string(j))
				setprofilestring(result,"COLEGIADOS","porcentaje_"+string(n_c),ls_aux)
				ls_aux=''
				//autor
				setprofilestring(result,"COLEGIADOS","autor_"+string(n_c),"S")
				//director
				setprofilestring(result,"COLEGIADOS","director_"+string(n_c),ls_aux)
				//nombre
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_Nombre')
				ls_aux_1 = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_Apellidos')
				setprofilestring(result,"COLEGIADOS","nombre_"+string(n_c),ls_aux_1 + ", "+ ls_aux)
				//nif
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_DNI')
				setprofilestring(result,"COLEGIADOS","nif_"+string(n_c),ls_aux)
				ls_aux=''
				//miembro_sociedad
				setprofilestring(result,"COLEGIADOS","miembro_sociedad_"+string(n_c),"")
				//csfp
				setprofilestring(result,"COLEGIADOS","csfp_"+string(n_c),"")
				//director_em
				setprofilestring(result,"COLEGIADOS","director_em_"+string(n_c),"S")
				//autor_ess
				setprofilestring(result,"COLEGIADOS","autor_ess_"+string(n_c),"N")
				//autor_eb
				setprofilestring(result,"COLEGIADOS","autor_eb_"+string(n_c),"N")
				//atcssdo
				setprofilestring(result,"COLEGIADOS","atcssdo_"+string(n_c),"N")
				select domicilio_activo, poblacion_activa into :domicilio,:localidad  from colegiados where n_colegiado = :numero_colegiado using sqlca;
				//domicilio
				setprofilestring(result,"COLEGIADOS","domicilio_"+string(n_c),domicilio)
				//localidad
				setprofilestring(result,"COLEGIADOS","localidad_"+string(n_c),localidad)
				//provincia
				setprofilestring(result,"COLEGIADOS","provincia_"+string(n_c),"")
				//colegio_oficial
				setprofilestring(result,"COLEGIADOS","colegio_oficial_"+string(n_c),"31")
				//alta_mussaat
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"CProfesion_Col"+string(n_c))
				if ls_aux = "MUSAAT" then
					ls_aux = "S"
				else
					//observaciones = observaciones + "  " +"Seguro_Col"+string(n_c) +" : " +ls_aux+", "
					ls_aux = "N"
				end if
				setprofilestring(result,"COLEGIADOS","alta_musaat_"+string(n_c),ls_aux)
				ls_aux=''
				//cobertura
				setprofilestring(result,"COLEGIADOS","cobertura_"+string(n_c),"")
				//bonus_malus
				setprofilestring(result,"COLEGIADOS","bonus_malus_"+string(n_c),"1")
				//cp
				setprofilestring(result,"COLEGIADOS","cp_"+string(n_c),"")
				n_c = n_c +1
			else
				//ARQUITECTOS
				setprofilestring(result,"ARQUITECTOS","numero_"+string(n_a),"")
				ls_aux=''
				//porcentaie
				//ls_aux=f_buscar_patron_en_fdf(cadena_fdt,'ParCol'+string())
				setprofilestring(result,"ARQUITECTOS","porcentaie_"+string(n_a),ls_aux)
				ls_aux=''
				//autor
				setprofilestring(result,"ARQUITECTOS","autor_"+string(n_a),"S")
				//director
				setprofilestring(result,"ARQUITECTOS","director_"+string(n_a),"N")
				//nombre
			
				autor_aux=f_buscar_patron_en_fdf(cadena_fdt,'Autor'+string(i)+'I')
				posicion = pos(autor_aux,",")
				nombre_aux = mid(autor_aux,1,posicion - 2 )
				apellido_aux = mid(autor_aux, posicion  )			
				setprofilestring(result,"ARQUITECTOS","nombre_"+string(n_a),nombre_aux)
				ls_aux=''
				
				setprofilestring(result,"ARQUITECTOS","apellidos_"+string(n_a),apellido_aux)
				ls_aux=''
				setprofilestring(result,"ARQUITECTOS","nif_"+string(n_a),ls_aux)
				ls_aux=''
				//titulacion
				s_autores = "Autor"+string(j)
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,s_autores+"_Titulacion")
				setprofilestring(result,"ARQUITECTOS","dni_"+string(n_a),ls_aux)
				ls_aux=''
				//csfp
				setprofilestring(result,"ARQUITECTOS","csfp_"+string(n_a),"")
				//director_em
				setprofilestring(result,"ARQUITECTOS","director_em_"+string(n_a),"N")
				//autor_ess
				setprofilestring(result,"ARQUITECTOS","autor_ess_"+string(n_a),"N")
				//autor_eb
				setprofilestring(result,"ARQUITECTOS","autor_eb_"+string(n_a),"N")
				//atcssdo
				setprofilestring(result,"ARQUITECTOS","atcssdo_"+string(n_a),"N")	
				n_a  = n_a +1
			end if
		end if
		//si es autor y no colegiado insertaos en arquitectos
		if relacion[i,1] <> "" and relacion[i,2] = "" and num_soc_aux = '' then
				j =  integer(relacion[i,3])
				//ARQUITECTOS
				setprofilestring(result,"ARQUITECTOS","numero_"+string(n_a),"")
				ls_aux=''
				//porcentaie
				setprofilestring(result,"ARQUITECTOS","porcentaie_"+string(n_a),ls_aux)
				ls_aux=''
				//autor
				setprofilestring(result,"ARQUITECTOS","autor_"+string(n_a),"S")
				//director
				setprofilestring(result,"ARQUITECTOS","director_"+string(n_a),"N")
				//nombre
				
				autor_aux=f_buscar_patron_en_fdf(cadena_fdt,'Autor'+string(i)+'I')
				posicion = pos(autor_aux,",")
				nombre_aux = mid(autor_aux,1,posicion - 2 )
				apellido_aux = mid(autor_aux, posicion  )			
				setprofilestring(result,"ARQUITECTOS","nombre_"+string(n_a),nombre_aux)
				ls_aux=''
				//apellidos
				setprofilestring(result,"ARQUITECTOS","apellidos_"+string(n_a),apellido_aux)
				ls_aux=''
				//nif
				setprofilestring(result,"ARQUITECTOS","nif_"+string(n_a),ls_aux)
				ls_aux=''
				//titulacion
				s_autores = "Autor"+string(j)
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,s_autores+"_Titulacion")
				setprofilestring(result,"ARQUITECTOS","dni_"+string(n_a),ls_aux)
				ls_aux=''
				//csfp
				setprofilestring(result,"ARQUITECTOS","csfp_"+string(n_a),"")
				//director_em
				setprofilestring(result,"ARQUITECTOS","director_em_"+string(n_a),"N")
				//autor_ess
				setprofilestring(result,"ARQUITECTOS","autor_ess_"+string(n_a),"N")
				//autor_eb
				setprofilestring(result,"ARQUITECTOS","autor_eb_"+string(n_a),"N")
				//atcssdo
				setprofilestring(result,"ARQUITECTOS","atcssdo_"+string(n_a),"N")	
				n_a  = n_a +1
		end if
		
		if relacion[i,1] = "" and relacion[i,2] <> "" then
			if num_sociedad <> "" then
				j =  integer(relacion[i,3])
				//aqui vamos a tratar si el sujeto es socio --> asociados o no lo es -- > colegiado
			
				choose case j
					case 1
						num_soc_aux = num_soc1
					case 2
						num_soc_aux = num_soc2
					case 3
						num_soc_aux = num_soc3
				end choose
				numero_colegiado = f_buscar_patron_en_fdf(cadena_fdt,"Arq"+string(j)+'_NumColI')
				if len(numero_colegiado) < 5 then
					choose case len(numero_colegiado)
						case 1
							numero_colegiado = "0000"+ numero_colegiado
						case 2
							numero_colegiado = "000"+ numero_colegiado
						case 3
							numero_colegiado = "00"+ numero_colegiado
						case 4
							numero_colegiado = "0"+ numero_colegiado
					end choose
				end if
				choose case j
						case 1
							participacion_aux = participacion_1
						case 2
							participacion_aux = participacion_2
						case 3
							participacion_aux = participacion_3
				end choose
				if num_soc_aux <> '' then
					setprofilestring(result,"ASOCIADOS","numero_"+string(n_c),numero_colegiado)
					ls_aux=''
					//porcentaje
					ls_aux=f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol'+string(j))
					setprofilestring(result,"ASOCIADOS","porcentaje_"+string(n_c),string(participacion_aux*100/participacion_total_sociedad))
					ls_aux=''
					//autor
					setprofilestring(result,"ASOCIADOS","autor_"+string(n_c),"S")
					//director
					setprofilestring(result,"ASOCIADOS","director_"+string(n_c),"N")
					//nombre
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(n_c)+'_Nombre')
					ls_aux_1 = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(n_c)+'_Apellidos')
					setprofilestring(result,"ASOCIADOS","nombre_"+string(n_c),ls_aux +" "+ls_aux_1)
					ls_aux=''
					//nif
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,num_arquitecto+'_DNI')
					setprofilestring(result,"ASOCIADOS","nif_"+string(n_c),ls_aux)
					ls_aux=''
					//sociedad
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,num_arquitecto+'_Sociedad')
					setprofilestring(result,"ASOCIADOS","nif_"+string(n_c),"s"+ls_aux)
					ls_aux=''
					//sociendad
					setprofilestring(result,"ASOCIADOS","sociedad_"+string(n_c),"S"+num_soc1)
					//csfp
					setprofilestring(result,"ASOCIADOS","csfp_"+string(n_c),"N")
					//director_em
					setprofilestring(result,"ASOCIADOS","director_em_"+string(n_c),"N")
					//autor_ess
					setprofilestring(result,"ASOCIADOS","autor_ess_"+string(n_c),"N")
					//autor_eb
					setprofilestring(result,"ASOCIADOS","autor_eb_"+string(n_c),"N")
					//atcssdo
					setprofilestring(result,"ASOCIADOS","atcssdo_"+string(n_c),"N")
					select domicilio_activo, poblacion_activa into :domicilio,:localidad  from colegiados where n_colegiado = :numero_colegiado using sqlca;
					//domicilio
					ls_aux = domicilio//f_buscar_patron_en_fdf(cadena_fdt,numarquitecto+'_NumCol'+string(i))
					setprofilestring(result,"ASOCIADOS","domicilio_"+string(n_c),ls_aux)
					ls_aux=''
					//localidad
					ls_aux = localidad//f_buscar_patron_en_fdf(cadena_fdt,numarquitecto+'_NumCol'+string(i))
					setprofilestring(result,"ASOCIADOS","localidad_"+string(n_c),ls_aux)
					ls_aux=''
					//provincia
					setprofilestring(result,"ASOCIADOS","provincia_"+string(n_c),"")
					//colegio_oficial
					setprofilestring(result,"ASOCIADOS","colegio_oficial_"+string(n_c),"31")
					//alta_mussaat
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"CProfesion_Col"+string(i))
					if ls_aux = "MUSAAT" then
						ls_aux = "S"
					else
						//observaciones = observaciones + "  " +"Seguro_Col"+string(n_c) +" : " +ls_aux+", "
						ls_aux = "N"
					end if
					setprofilestring(result,"ASOCIADOS","alta_musaat_"+string(n_c),ls_aux)
					ls_aux=''
					//cobertura
					setprofilestring(result,"ASOCIADOS","cobertura_"+string(n_c),"")
					//bonus_malus
					setprofilestring(result,"ASOCIADOS","bonus_malus_"+string(n_c),"1")
					//cp
					setprofilestring(result,"ASOCIADOS","cp_"+string(n_c),"")
					n_c = n_c +1
				else
					setprofilestring(result,"COLEGIADOS","numero_"+string(n_s),numero_colegiado)
					ls_aux=''
					//porcentaje
					ls_aux=f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol'+string(j))
					setprofilestring(result,"COLEGIADOS","porcentaje_"+string(n_s),ls_aux)
					participacion_sociedad = participacion_sociedad - double(ls_aux)
					setprofilestring(result,"COLEGIADOS","porcentaje_1",string(participacion_sociedad))
					ls_aux=''
					//autor
					setprofilestring(result,"COLEGIADOS","autor_"+string(n_s),"N")
					//director
					setprofilestring(result,"COLEGIADOS","director_"+string(n_s),ls_aux)
					//nombre
					setprofilestring(result,"COLEGIADOS","nombre_"+string(n_s),colegiados[i,1])
					//nif
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_DNI')
					setprofilestring(result,"COLEGIADOS","nif_"+string(n_s),ls_aux)
					ls_aux=''
					//miembro_sociedad
					setprofilestring(result,"COLEGIADOS","miembro_sociedad_"+string(n_s),"")
					//csfp
					setprofilestring(result,"COLEGIADOS","csfp_"+string(n_s),"")
					//director_em
					setprofilestring(result,"COLEGIADOS","director_em_"+string(n_s),"S")
					//autor_ess
					setprofilestring(result,"COLEGIADOS","autor_ess_"+string(n_s),"N")
					//autor_eb
					setprofilestring(result,"COLEGIADOS","autor_eb_"+string(n_s),"N")
					//atcssdo
					setprofilestring(result,"COLEGIADOS","atcssdo_"+string(n_s),"N")
					select domicilio_activo, poblacion_activa into :domicilio,:localidad  from colegiados where n_colegiado = :numero_colegiado using sqlca;
					//domicilio
					setprofilestring(result,"COLEGIADOS","domicilio_"+string(n_s),domicilio)
					//localidad
					setprofilestring(result,"COLEGIADOS","localidad_"+string(n_s),localidad)
					//provincia
					setprofilestring(result,"COLEGIADOS","provincia_"+string(n_s),"")
					//colegio_oficial
					setprofilestring(result,"COLEGIADOS","colegio_oficial_"+string(n_s),"31")
					//alta_mussaat
					ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"CProfesion_Col"+string(j))
					if ls_aux = "MUSAAT" then
						ls_aux = "S"
					else
						//observaciones = observaciones + "  " +"Seguro_Col"+string(j) +" : " +ls_aux+", "
						ls_aux = "N"
					end if
					setprofilestring(result,"COLEGIADOS","alta_musaat_"+string(n_s),ls_aux)
					ls_aux=''
					//cobertura
					setprofilestring(result,"COLEGIADOS","cobertura_"+string(n_s),"")
					//bonus_malus
					setprofilestring(result,"COLEGIADOS","bonus_malus_"+string(n_s),"1")
					//cp
					setprofilestring(result,"COLEGIADOS","cp_"+string(n_s),"")
					n_s=n_s+1
				end if
				
			else
				j =  integer(relacion[i,3])
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"Arq"+string(j)+'_NumColI')
				numero_colegiado = ls_aux
				if len(numero_colegiado) < 5 then
					choose case len(numero_colegiado)
						case 1
							numero_colegiado = "0000"+ numero_colegiado
						case 2
							numero_colegiado = "000"+ numero_colegiado
						case 3
							numero_colegiado = "00"+ numero_colegiado
						case 4
							numero_colegiado = "0"+ numero_colegiado
					end choose
				end if
				setprofilestring(result,"COLEGIADOS","numero_"+string(n_c),numero_colegiado)
				ls_aux=''
				//porcentaje
				ls_aux=f_buscar_patron_en_fdf(cadena_fdt,'Trab'+string(contrato)+'_ParCol'+string(j))
				setprofilestring(result,"COLEGIADOS","porcentaje_"+string(n_c),ls_aux)
				ls_aux=''
				//autor
				setprofilestring(result,"COLEGIADOS","autor_"+string(n_c),"N")
				//director
				setprofilestring(result,"COLEGIADOS","director_"+string(n_c),ls_aux)
				//nombre
				setprofilestring(result,"COLEGIADOS","nombre_"+string(n_c),colegiados[i,1])
				//nif
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Arq'+string(j)+'_DNI')
				setprofilestring(result,"COLEGIADOS","nif_"+string(n_c),ls_aux)
				ls_aux=''
				//miembro_sociedad
				setprofilestring(result,"COLEGIADOS","miembro_sociedad_"+string(n_c),"")
				//csfp
				setprofilestring(result,"COLEGIADOS","csfp_"+string(n_c),"")
				//director_em
				setprofilestring(result,"COLEGIADOS","director_em_"+string(n_c),"S")
				//autor_ess
				setprofilestring(result,"COLEGIADOS","autor_ess_"+string(n_c),"N")
				//autor_eb
				setprofilestring(result,"COLEGIADOS","autor_eb_"+string(n_c),"N")
				//atcssdo
				setprofilestring(result,"COLEGIADOS","atcssdo_"+string(n_c),"N")
				select domicilio_activo, poblacion_activa into :domicilio,:localidad  from colegiados where n_colegiado = :numero_colegiado using sqlca;
				//domicilio
				setprofilestring(result,"COLEGIADOS","domicilio_"+string(n_c),domicilio)
				//localidad
				setprofilestring(result,"COLEGIADOS","localidad_"+string(n_c),localidad)
				//provincia
				setprofilestring(result,"COLEGIADOS","provincia_"+string(n_c),"")
				//colegio_oficial
				setprofilestring(result,"COLEGIADOS","colegio_oficial_"+string(n_c),"31")
				//alta_mussaat
				ls_aux = f_buscar_patron_en_fdf(cadena_fdt,"CProfesion_Col"+string(j))
				if ls_aux = "MUSAAT" then
					ls_aux = "S"
				else
					//observaciones = observaciones + "  " +"Seguro_Col"+string(j) +" : " +ls_aux+", "
					ls_aux = "N"
				end if
				setprofilestring(result,"COLEGIADOS","alta_musaat_"+string(n_c),ls_aux)
				ls_aux=''
				//cobertura
				setprofilestring(result,"COLEGIADOS","cobertura_"+string(n_c),"")
				//bonus_malus
				setprofilestring(result,"COLEGIADOS","bonus_malus_"+string(n_c),"1")
				//cp
				setprofilestring(result,"COLEGIADOS","cp_"+string(n_c),"")
				n_c=n_c+1
			end if
		end if
		
	next


//[COLEGIADOS]
if num_sociedad <> "" then
	setprofilestring(result,"COLEGIADOS","total",string(n_s - 1 ))
	setprofilestring(result,"ASOCIADOS","total",string(n_c - 1 ))
else
	setprofilestring(result,"COLEGIADOS","total",string(n_c - 1  ))
end if
//[ARQUITECTOS]
setprofilestring(result,"ARQUITECTOS","total",string(n_a -1 ))

//														CLIENTES O PROMOTOR
/*********************************************************************************************/
//debemos de obtener el numero de clientes
ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'NumClientes')
num_cliente = integer(ls_aux)
if not isnumber(string(num_cliente)) then num_cliente = 4
if num_cliente > 3 then 
for i = 1 to 3 step 1
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Cli'+string(i)+'_CDNI')
	if not f_es_vacio(ls_aux) then	num_cliente= i
next
end if


//comprobaremos tambien si hay promotor
string ls_promotor
string es_promotor
string s_apellidos_promotor 
string s_nombre_promotor


ls_promotor =  f_buscar_patron_en_fdf(cadena_fdt,'Promotor')
ls_comprobante=f_buscar_patron_en_fdf(cadena_fdt,'ClasePromotor')

//Comprobaci$$HEX1$$f300$$ENDHEX$$n del verdarero nombre del promotor, pq se busca en varios sitios.
if ls_promotor= ls_comprobante then
	setnull(ls_promotor)	
else
	ls_comprobante=f_buscar_patron_en_fdf(cadena_fdt,'CPromotor')
	if ls_promotor= ls_comprobante then	setnull(ls_promotor)	
end if
//
for i = 1 to num_cliente step 1
	choose case i
		case 1
			patron_cliente = "Cli1"
		case 2
			patron_cliente = "Cli2"
		case 3
			patron_cliente = "Cli3"
	end choose
	//nif
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CDNI')
	setprofilestring(result,"CLIENTES","nif_"+string(i),ls_aux)
	ls_aux=''
	//participacion
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CParticipacion')
	setprofilestring(result,"CLIENTES","participacion_"+string(i),ls_aux)
	ls_aux=''
	//promotor
	setprofilestring(result,"CLIENTES","promotor_"+string(i),'N')
	//pagador 
	setprofilestring(result,"CLIENTES","pagador_"+string(i),"S")
	//autor_encargo
	setprofilestring(result,"CLIENTES","autor_encargo_"+string(i),"N")
	//apellidos
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CApellidos')
	setprofilestring(result,"CLIENTES","apellidos_"+string(i),ls_aux)
	ls_aux=''
	//nombre
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Cli' + string(i)+"_CNombre")
	setprofilestring(result,"CLIENTES","nombre_"+string(i),ls_aux)
	ls_aux=''
	//observaciones
	setprofilestring(result,"CLIENTES","observaciones_"+string(i),"")
	//tipo_via
	setprofilestring(result,"CLIENTES","tipo_via_"+string(i),"CL")
	//nombre_via
	direccion = direccion + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CCalle')
	direccion = direccion + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CNumero')
	direccion = direccion + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CPiso')
	direccion = direccion + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CMano')
	setprofilestring(result,"CLIENTES","nombre_via_"+string(i),direccion)
	direccion = ""
	//hacemos una llamada a la funcion f_poblacion datos para rellenar st
	st = f_poblacion_datos(f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CCodPostal'), f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_CMunicipio'))	
	//cod_pos, poblacion, provincia, id_pob
	setprofilestring(result,"CLIENTES","cod_pos_"+string(i),st.cod_pos)	
	
	setprofilestring(result,"CLIENTES","poblacion_"+string(i),st.desc_poblacion)
	
	setprofilestring(result,"CLIENTES","provincia_"+string(i),st.desc_provincia)

	setprofilestring(result,"CLIENTES","id_pob_"+string(i),st.cod_pob)
	
	//cuenta_bancaria
	setprofilestring(result,"CLIENTES","cuenta_bancaria_"+string(i),"")
	//representante
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'representante1')
	setprofilestring(result,"CLIENTES","rep_nombre_"+string(i),ls_aux)
	ls_aux=''
	//rep_apellidos
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Cli'+string(i)+'_RApellidos')
	setprofilestring(result,"CLIENTES","rep_apellidos_"+string(i),ls_aux)
	ls_aux=''
	//nombre_via
	Direccion_Rep = Direccion_Rep + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_RCalle')
	Direccion_Rep = Direccion_Rep + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_RNumero')
	Direccion_Rep = Direccion_Rep + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_RPiso')
	Direccion_Rep = Direccion_Rep + " " + f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_RMano')
	setprofilestring(result,"CLIENTES","rep_direccion_"+string(i),ls_aux)
	Direccion_Rep = ""
	//rep_tipo_via
	setprofilestring(result,"CLIENTES","rep_tipo_via_"+string(i),"CL")
	//rep_nif
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Cli'+string(i)+'_RDNI')
	setprofilestring(result,"CLIENTES","rep_nif_"+string(i),ls_aux)
	ls_aux=''
	//rep_cp
	ls_aux = f_buscar_patron_en_fdf(cadena_fdt,'Cli'+string(i)+'_RCodPostal')
	setprofilestring(result,"CLIENTES","rep_cp_"+string(i),ls_aux)
	ls_aux=''
	//hacemos una llamada a la funcion f_poblacion datos para rellenar st
	st = f_poblacion_datos(f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_RCodPostall'), f_buscar_patron_en_fdf(cadena_fdt,patron_cliente+'_RMunicipio'))	
	//cod_pos, poblacion, provincia, id_pob
	setprofilestring(result,"CLIENTES","rep_cp_"+string(i),st.cod_pos)	
	
	setprofilestring(result,"CLIENTES","rep_poblacion_"+string(i),st.desc_poblacion)
	
	setprofilestring(result,"CLIENTES","rep_provincia_"+string(i),st.desc_provincia)

next
	if  not f_es_vacio(ls_promotor) then
		num_cliente = num_cliente + 1
		es_promotor = "N"
		posicion = pos(ls_promotor,",")
		s_apellidos_promotor = trim(mid(ls_promotor,1,posicion - 1))
		s_nombre_promotor = trim(mid (ls_promotor,posicion + 1))
		//nif
		setprofilestring(result,"CLIENTES","nif_"+string(num_cliente),"")
		//participacion
		setprofilestring(result,"CLIENTES","participacion_"+string(num_cliente),"")
		//promotor
		setprofilestring(result,"CLIENTES","promotor_"+string(num_cliente),"S")
		//pagador 
		setprofilestring(result,"CLIENTES","pagador_"+string(num_cliente),"N")
		//autor_encargo
		setprofilestring(result,"CLIENTES","autor_encargo_"+string(num_cliente),"")
		//apellidos
		setprofilestring(result,"CLIENTES","apellidos_"+string(num_cliente),s_apellidos_promotor)
		//nombre
		setprofilestring(result,"CLIENTES","nombre_"+string(num_cliente),s_nombre_promotor)
		//observaciones
		setprofilestring(result,"CLIENTES","observaciones_"+string(num_cliente),"")
		//tipo_via
		setprofilestring(result,"CLIENTES","tipo_via_"+string(num_cliente),"")
		//nombre_via
		setprofilestring(result,"CLIENTES","nombre_via_"+string(num_cliente),"")
		//id_pob
		setprofilestring(result,"CLIENTES","id_pob_"+string(num_cliente),"")
		//cod_pos
		setprofilestring(result,"CLIENTES","cod_pos_"+string(num_cliente),"")
		//poblacion
		setprofilestring(result,"CLIENTES","poblacion_"+string(num_cliente),"")
		//provincia
		setprofilestring(result,"CLIENTES","provincia_"+string(num_cliente),"")
		//cuenta_bancaria
		setprofilestring(result,"CLIENTES","cuenta_bancaria_"+string(num_cliente),"")
		//representante
		setprofilestring(result,"CLIENTES","rep_nombre_"+string(num_cliente),"")
		//rep_apellidos
		setprofilestring(result,"CLIENTES","rep_apellidos_"+string(num_cliente),"")
		//rep_direccion
		setprofilestring(result,"CLIENTES","rep_direccion_"+string(num_cliente),"")
		//rep_tipo_via
		setprofilestring(result,"CLIENTES","rep_tipo_via_"+string(num_cliente),"")
		//rep_poblacion
		setprofilestring(result,"CLIENTES","rep_poblacion_"+string(num_cliente),"")
		//rep_provincia
		setprofilestring(result,"CLIENTES","rep_provincia_"+string(num_cliente),"")
		//rep_nif
		setprofilestring(result,"CLIENTES","rep_nif_"+string(num_cliente),"")
		//rep_cp
		setprofilestring(result,"CLIENTES","rep_cp_"+string(num_cliente),"")
end if

	setprofilestring(result,"CLIENTES","total",string(num_cliente))
	
	//[CONSTRUCTORES]
	setprofilestring(result,"CONSTRUCTORES","total","")
	
	//Finalmente a$$HEX1$$f100$$ENDHEX$$adimos las observaciones del trabajo
	
	//OBSERVACIONES
	setprofilestring(result,"CONTRATO","observaciones",observaciones)
	
	
return result
end function

